name: Odoo Tests

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: odoo
          POSTGRES_PASSWORD: odoo
          POSTGRES_DB: odoo_test_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install Odoo dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-dev libxml2-dev libxslt1-dev zlib1g-dev libsasl2-dev libldap2-dev libssl-dev
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Wait for PostgreSQL
        run: |
          until pg_isready -h localhost -p 5432; do
            echo "Waiting for PostgreSQL to be ready..."
            sleep 2
          done

      - name: Run Odoo tests
        env:
          PGHOST: localhost
          PGUSER: odoo
          PGPASSWORD: odoo
          PGDATABASE: odoo_test_db
        run: |
          ./odoo-bin --addons-path=./addons,./odoo/addons,./odoo/custom_addons -d odoo_test_db -i app_one --stop-after-init

    # This workflow contains a single job called "build"
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install SSH client
        run: sudo apt-get install -y openssh-client

      - name: Zip repository
        run: zip -r estate.zip . -x "*.git*"

      - name: Add SSH key
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.PRIVATE_KEY }}

      - name: Transfer zip to server
        env:
          SSH_HOST: ${{ secrets.HOST }}
          SSH_USER: ${{ secrets.USERNAME }}
        run: |
          scp -o StrictHostKeyChecking=no estate.zip $SSH_USER@$SSH_HOST:/opt/odoo17/estate/estate.zip
      - name: Multiple commands
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.PRIVATE_KEY }}
          script: |
            echo "Stopping Odoo 17 ..."
            systemctl stop odoo17
            chmod 755 /opt/odoo17/estate/estate.zip
            echo "Unzipping new Odoo files..."
            unzip -o /opt/odoo17/estate/estate.zip -d /opt/odoo17/estate
            echo "Setting permissions for Odoo 17..."
            chown -R odoo17:odoo17 /opt/odoo17/estate
            echo "Starting Odoo17 service..."
            systemctl start odoo17
            echo "Deployment successful!."

      - name: Clean up
        run: rm estate.zip